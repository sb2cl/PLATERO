function [data_cal, datagfp_val] = prep_data(filename,colstable,gainlevels,colnames,readvarnames,dirdatasave)
arguments
    filename
    colstable
    gainlevels
    colnames
    readvarnames logical = false
    dirdatasave string = pwd;
end
% Read the experiment and print the size of the matrix

dataPR = readexperiment(filename,colstable,gainlevels,readvarnames,colnames);
size(dataPR)
%
% After loading all the sheets of the excel file, measurements are concatenated, 
% grouping all in a single table variable and identifying them by their values 
% for variables "Well","Gain" and "Repeat" (automatically generated by the function 
% tableprep.m). The resulting table, dataPR (dataPlateReader), has the desired 
% structure. 
%
% Then, observations belonging to empty wells (used to measure the _F_BLK_ term) 
% and to wells with the reporter (Fluorescein in this case), are splitted in two 
% different tables.

datPRblk = dataPR(isnan(dataPR{:,"Concentration"}),:);
datPRgfp = dataPR(~isnan(dataPR{:,"Concentration"}),:);
disp(strcat("This data set has ", string(size(datPRblk,1)),...
    " BLK observations and ", string(size(datPRgfp,1)), ...
    " GFP observations."))
% Now, the gfp values are splitted in the training and validation data subsets:
rng(0207)
[datagfp_cal, datagfp_val] = cvsplit(datPRgfp, 0.7);
disp(strcat("The calibration data set has ", string(size(datagfp_cal,1)),...
    " observations and the validation data set has ", ...
    string(size(datagfp_val,1)), " observations."))

% These two sets are stored as different |.mat| files. Since the _F_BLK_ term 
% is estimated as well as a model parameter, the values in |blk_data|
% are added to the |data_cal| table.

data_cal = [datPRblk; datagfp_cal];
save(strcat(dirdatasave,'calibration.mat'),"data_cal")
save(strcat(dirdatasave,'validation.mat'),"datagfp_val")

end